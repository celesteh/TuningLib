TITLE:: Key
summary:: Handles key changes
categories::  Tuning>TuningLib
related:: Scale, Tuning

DESCRIPTION::
Keeps track of key changes and adjusts the tuning of the current scale accordingly.

Also can quantize a given semitone, cents value or frequency into the currently used scale

CLASSMETHODS::

METHOD:: new
create a Key

ARGUMENT:: scale
The current scale



INSTANCEMETHODS::


METHOD:: change
Change the current Key. This works correctly with both ET and JI.

ARGUMENT:: degree
The degree of the scale to modulate by. If it and chromatic are nil, revert to previous state.

ARGUMENT:: chromatic
the chromatic interval to modulate by


METHOD:: mode
changes the mode of the current key

ARGUMENT:: mode
 an array of degrees or a key from link::Classes/ScaleInfo::. If nil, it revcerts to previous mode





METHOD:: quantize
Snaps a semitone to the nearest semitone in the current key

ARGUMENT:: semitone
the tone to be quantized, or an array of semitones

ARGUMENT:: round
		round: has three modes:
			\off  do not round the answer
			\up   round the answer to the nearest scale freq above
			\down round the answer to the nearest scale freq below

ARGUMENT:: gravity
determines how strong the attraction is:
			1 = fully quantized
			0 = no quantization
			0<x<1  interpolate between unquantized and fully quantized values
returns:: quantised semitone





METHOD:: quantizeFreq
Snaps the feq value in Hz to the nearest Hz value in the current key

ARGUMENT:: freq
in Hz

ARGUMENT:: base
The base frequency, or root frequency

ARGUMENT:: round
has three modes:
			\off  do not round the answer
			\up   round the answer to the nearest scale freq above
			\down round the answer to the nearest scale freq below

ARGUMENT:: gravity
determines how strong the attraction is:
			1 = fully quantized
			0 = no quantization
			0<x<1  interpolate between unquantized and fully quantized values
returns:: quantised frequency

METHOD:: quantizeCents
snaps a cents value to the nearest semitone in the current key

ARGUMENT:: cent
the cents value to be quantized, or an array of cents

ARGUMENT:: round
has three modes:
			\off  do not round the answer
			\up   round the answer to the nearest scale freq above
			\down round the answer to the nearest scale freq below

ARGUMENT:: gravity
determines how strong the attraction is:
			1 = fully quantized
			0 = no quantization
			0<x<1  interpolate between unquantized and fully quantized values

returns:: quantised cents


EXAMPLES::

code::
		k = Key(Scale.major);
		k.scale.degrees;
		k.scale.semitones;
		k.change(4); // modulate to the 5th scale degree (we start counting with 0)
		k.scale.degrees;
		k.scale.semitones;
		k.change(4); // modulate to the 5th scale degree (in the new key)
		k.scale.degrees;
		k.scale.semitones;
		k.change; // modulate back from the V/V degree
		k.scale.degrees;
		k.scale.semitones;
		k.change; // modulate back from the 5th scale degree
		k.scale.degrees;
		k.scale.semitones;
		k.change(chromatic:3); // modulate by a minor third
		k.scale.degrees;
		k.scale.semitones;
		k.change; // back to home key again
		k.scale.degrees;
		k.scale.semitones;

// modulate

		k.mode_(\minor);
		k.scale.degrees;
		k.scale.semitones;
		k.scale([0, 2, 4, 6, 8, 10, 11]);
		k.scale.degrees;
		k.scale.semitones;


// quantize

		k.quantize(11.5);
		k.quantize([0.1, 3.5, 7.4]);


		k.quantizeFreq(660, 440);


		k.quantizeCents(1150);


// use in a Pbind
(
a = Scale.major;
a.tuning = \just;
k = Key(a);

Pbind(
	\scale, Pfunc({ k.scale }),
	\degree, Pseq([
				Prand(k.scale.degrees, 20),
				Prout({
					k.mode = \minor;
					0.yield;
				}),
				Prand(k.scale.degrees, 20)], 1)
).play
)
::