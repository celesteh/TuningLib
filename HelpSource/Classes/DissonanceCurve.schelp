CLASS:: DissonanceCurve
summary:: Analyzes timbres in order to create tunings
categories:: Tuning>TuningLib
related::  http://eceserv0.ece.wisc.edu/~sethares/consemi.html

DESCRIPTION::

Uses Bill Seathares' Dissoncance Curve algorithm in order to compute tunings for a given timbre.


CLASSMETHODS::

METHOD:: new
Create a new curve based on arrays of data. This would mostly be used for additive synthesis.

argument:: freqs
An array of signficant frequencies of a timbre. 

argument:: amps
An array of amplitudes for the given frequencies. 

argument:: highInterval
The largest interval to compute in cents. For octave-based systems, you would usually use 1200. Default value is 1902.



METHOD:: fm
Create a curve based on the timbre of a given FM specification

argument:: carrier
The carrier frequency in Hz

argument:: modulator
The modulation frequency in Hz

argument:: depth
The depth (or delta range) of the modulator, in Hz

argument:: highInterval
 The largest interval to compute in cents. For octave-based systems, you would usually use 1200.


METHOD:: fft
(describe method here)

argument:: buffer
(describe argument here)

argument:: size
(describe argument here)

argument:: cutoff
(describe argument here)

argument:: highInterval
(describe argument here)

argument:: action
(describe argument here)

returns:: (returnvalue)


INSTANCEMETHODS::

METHOD:: curve
(describe method here)

returns:: (returnvalue)

METHOD:: cents_scale
(describe method here)

returns:: (returnvalue)

METHOD:: just_curve
(describe method here)

returns:: (returnvalue)

METHOD:: just_scale
(describe method here)

returns:: (returnvalue)

METHOD:: fmInit
(describe method here)

argument:: carrier
(describe argument here)

argument:: modulator
(describe argument here)

argument:: depth
(describe argument here)

argument:: highInterval
(describe argument here)

returns:: (returnvalue)

METHOD:: initFromFFT
(describe method here)

argument:: buffer
(describe argument here)

argument:: size
(describe argument here)

argument:: cutoff
(describe argument here)

argument:: highInterval
(describe argument here)

argument:: action
(describe argument here)

returns:: (returnvalue)

METHOD:: init
(describe method here)

argument:: freq
(describe argument here)

argument:: amp
(describe argument here)

argument:: high
(describe argument here)

returns:: (returnvalue)

METHOD:: tuning
(describe method here)

returns:: (returnvalue)

METHOD:: scale
(describe method here)

argument:: size
(describe argument here)

returns:: (returnvalue)

METHOD:: plot
(describe method here)

returns:: (returnvalue)

METHOD:: digestibleTuning
(describe method here)

argument:: window
(describe argument here)

returns:: (returnvalue)

METHOD:: digestibleScale
(describe method here)

argument:: window
(describe argument here)

argument:: size
(describe argument here)

returns:: (returnvalue)

METHOD:: pr_compute_partial_sethares
(describe method here)

argument:: interval
(describe argument here)

argument:: numpartials
(describe argument here)

returns:: (returnvalue)

METHOD:: pr_compute_partial_just
(describe method here)

argument:: num
(describe argument here)

argument:: dem
(describe argument here)

argument:: numpartials
(describe argument here)

returns:: (returnvalue)

METHOD:: pr_find_minima
(describe method here)

argument:: dcurve
(describe argument here)

returns:: (returnvalue)

METHOD:: pr_rms
(describe method here)

argument:: dcurve
(describe argument here)

argument:: window
(describe argument here)

returns:: (returnvalue)

METHOD:: pr_find_just_scale
(describe method here)

argument:: window
(describe argument here)

returns:: (returnvalue)


EXAMPLES::

code::
(some example code)
::
